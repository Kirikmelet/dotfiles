/* Table TS */

import { itemList } from './db.js'

// Define settings
interface classSettings {
  list: itemList[],
  target: string,
  name?: string,
  value?: string,
  isNum?: boolean,
  isIMG?: boolean,
  isName?: boolean
}

export class TableCtl {
  constructor () {}
  private _grabElement (quer: string): HTMLElement {
    return <HTMLElement> document.querySelector(quer)
  }
  private _newElement (tag: string, id?: string | number): HTMLElement {
    let newEl: HTMLElement = document.createElement(tag)
    if (id) { newEl.id = <string> id } 
    return newEl
  }
  addRow (setList: classSettings, indexMain: [number, number]): number {
    if (setList.isName) {
      this._addRowName(setList, indexMain)
    } else {
      const tableUse: HTMLElement = this._grabElement(setList.target)
      let putRow: HTMLElement[] = []
      let putInd: HTMLElement = document.createElement('TD')
      let totalNum: number = 0
      putInd.innerHTML = String(setList.value)
      tableUse.appendChild(putInd)
      indexMain.forEach((ev: any, ind: number) => {
        putRow[ind] = this._newElement('TD')
        totalNum = totalNum + setList.list[ev].nutrition[String(setList.value).toLocaleLowerCase()]
        putRow[ind].innerHTML = String(setList.list[ev].nutrition[String(setList.value).toLocaleLowerCase()])
        tableUse.appendChild(putRow[ind])
      })
      let endInd: HTMLElement = document.createElement('TD')
      endInd.innerHTML = String(totalNum)
      tableUse.appendChild(endInd)
    }
    return 1
  }
  private _addRowName (setList: classSettings, indexMain: [number, number]) {
    const tableUse: HTMLElement = this._grabElement(setList.target)
    let putRow: HTMLElement[] = []
    let putInd: HTMLElement = document.createElement('TH')
    putInd.innerHTML = 'FOOD'
    tableUse.appendChild(putInd)
    indexMain.forEach((ev: any, ind: number) => {
      putRow[ind] = this._newElement('TD')
      putRow[ind].innerHTML = <string> setList.list[ev].name
      tableUse.appendChild(putRow[ind]) 
    })
    let endInd: HTMLElement = document.createElement('TH')
    endInd.innerHTML = 'TOTAL'
    tableUse.appendChild(endInd)
    return 1
  }
  delRow(quer: string) {
    let targetEl: HTMLElement | null = document.querySelector(quer)
    if (targetEl) {
      let parentEl = targetEl.parentNode
      parentEl!.removeChild(targetEl)
      let newEl = document.createElement('TR')
      newEl.id = quer.substring(1)
      parentEl!.appendChild(newEl)
    } else { return 0 }
  }
}
